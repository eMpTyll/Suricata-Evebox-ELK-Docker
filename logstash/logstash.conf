input {
  file {
    path => ["/var/log/suricata/*.json"]
    sincedb_path => ["/var/cache/logstash/sincedbs/since.db"]
    codec => json
    type => "SELKS"
  }
}

filter {
  if [type] == "SELKS" {
    date {
      match => [ "timestamp", "ISO8601" ]
    }
    ruby {
      code => "
        if event.get('[event_type]') == 'fileinfo'
          event.set('[fileinfo][type]', event.get('[fileinfo][magic]').to_s.split(',')[0])
        end
      "
    }
    ruby {
      code => "
        if event.get('[event_type]') == 'alert'
          sp = event.get('[alert][signature]').to_s.split(' group ')
          if (sp.length == 2) and /\A\d+\z/.match(sp[1])
            event.set('[alert][signature]', sp[0])
          end
        end
      "
    }
    metrics {
      meter => [ "eve_insert" ]
      add_tag => "metric"
      flush_interval => 30
    }
  }

  if [http] {
    useragent {
       source => "[http][http_user_agent]"
       target => "[http][user_agent]"
    }
  }
  if [src_ip]  {
    geoip {
      source => "src_ip"
      target => "geoip"
    }
  }
  if [dest_ip]  {
    geoip {
      source => "dest_ip"
      target => "geoip"
    }
  }
}

output {
  if [event_type] and [event_type] != 'stats' {
    elasticsearch {
      hosts => ["http://172.18.0.2:9200"]
      index => "logstash-%{event_type}-%{+YYYY.MM.dd}"
      template_overwrite => true
      template => "/etc/logstash/elasticsearch8-template.json"
    }
  } else {
    elasticsearch {
      hosts => ["http://172.18.0.2:9200"]
      index => "logstash-%{+YYYY.MM.dd}"
      template_overwrite => true
      template => "/etc/logstash/elasticsearch8-template.json"
    }
  }
}

